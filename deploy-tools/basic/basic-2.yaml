apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: default
spec:
  selector:
    matchLabels:
      run: web
  template:
    metadata:
      labels:
        run: web
    spec:
      containers:
      - image: eu.gcr.io/methodical-path-326311/socket:s2.1
        imagePullPolicy: IfNotPresent
        name: socketserver
        ports:
        - containerPort: 3001
          protocol: TCP

      - image: eu.gcr.io/methodical-path-326311/rest:s2.2
        imagePullPolicy: IfNotPresent
        name: restserver
        ports:
        - containerPort: 3000
          protocol: TCP

      - image: eu.gcr.io/methodical-path-326311/frontend:s2.5.1
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: default
spec:
  ports:
  - port: 8080
    name: frontend
    protocol: TCP
    targetPort: 8080
  - port: 3001
    name: socketserver
    protocol: TCP
    targetPort: 3001
  - port: 3000
    name: restserver
    protocol: TCP
    targetPort: 3000
  selector:
    run: web
  type: NodePort

--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-ingress
spec:
  defaultBackend:
    service:
      name: web
      port:
        number: 8080
